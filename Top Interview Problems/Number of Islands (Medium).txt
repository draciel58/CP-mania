int dir[4][2] = {{1,0},{0,1},{0,-1},{-1,0}};

void dfs(int i,int j,int n,int m,vector<vector<int>>& matrix){
    matrix[i][j]=0;
    for(int k=0;k<4;k++){
        int x = dir[k][0]+i;
        int y = dir[k][1]+j;
        if(x>=0 && x<n && y>=0 && y<m && matrix[x][y]==1){
            dfs(x,y,n,m,matrix);
        }
    }
}


int solve(vector<vector<int>>& matrix) {
    int n = matrix.size();
    int m = matrix[0].size();
    int ans=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(matrix[i][j] == 1){
                dfs(i,j,n,m,matrix);
                ans++;
            }
        }
    }
    return ans;
}