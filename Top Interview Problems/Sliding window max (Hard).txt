vector<int> solve(vector<int>& nums, int k) {
    /*int n = nums.size();
    vector<int> ans;
    for(int i=0;i<=n-k;i++){
        int val=0;
        for(int j=i;j<i+k;j++){
            val=max(val,nums[j]);
        }
        ans.push_back(val);
    }
    return ans;
    */

    int n = nums.size();
    vector<int> ans;
    priority_queue<pair<int,int>,vector<pair<int,int> > > pq;
    for(int i=0;i<k;i++) pq.push({nums[i],i});
    ans.push_back(pq.top().first);
    for(int i=k;i<n;i++){
        pq.push({nums[i],i});
        while(pq.size()>0){
            if(pq.top().second<=i-k) pq.pop();
            else break;
        }
        ans.push_back(pq.top().first);
    }
    return ans;
}