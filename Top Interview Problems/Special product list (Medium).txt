vector<int> solve(vector<int>& nums) {
    
    /* time -> O(n2)
    int n = nums.size();
    vector<int> ans;
    for(int i=0;i<n;i++){
        int val = 1;
        for(int j=0;j<n;j++){
            if(i==j) continue;
            else val = val*nums[j];
        }
        ans.push_back(val);
    }
    return ans;
    */

    // time -> O(n), space -> O(n)
    int n = nums.size();
    vector<int> ans;
    vector<int> pref(n);
    vector<int> suff(n);
    pref[0]=nums[0];
    suff[n-1]=nums[n-1];
    for(int i=1;i<n;i++){
        pref[i]=nums[i]*pref[i-1];
    }
    for(int i=n-2;i>=0;i--){
        suff[i]=nums[i]*suff[i+1];
    }
    for(int i=0;i<n;i++){
        if(i==0) ans.push_back(suff[i+1]);
        else if(i==n-1) ans.push_back(pref[i-1]);
        else ans.push_back(pref[i-1]*suff[i+1]);
    }
    return ans;

}