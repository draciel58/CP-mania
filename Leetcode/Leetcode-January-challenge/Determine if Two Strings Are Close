class Solution {
public:
    bool closeStrings(string s1, string s2) {
        int n = s1.size();
        int m = s2.size();
        if(n!=m) 
            return false;
        unordered_map<char,int> mp1;
        unordered_map<char,int> mp2;
        for(int i=0;i<n;i++){
            mp1[s1[i]]++;
            mp2[s2[i]]++;
        }
        for(auto it:mp1){
            if(mp2[it.first]==0) return false;
        }
        vector<int> vec1;
        vector<int> vec2;
        for(auto it:mp1){
            vec1.push_back(it.second);
        }
        for(auto it:mp2){
            vec2.push_back(it.second);
        }
        sort(vec1.begin(),vec1.end());
        sort(vec2.begin(),vec2.end());
        if(vec1.size()!=vec2.size()) return false;
        for(int i=0;i<vec1.size();i++){
            if(vec1[i]!=vec2[i]) return false;
        }
        return true;
    }
};
