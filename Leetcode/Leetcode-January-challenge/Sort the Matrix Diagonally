class Solution {
public:
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        int n = mat.size();
        if(n==0){
            return mat;
        }
        int m = mat[0].size();
        vector<vector<int> > ans(n,vector<int> (m,0));
        for(int j=0,i=n-1;i>=0;i--){
            vector<int> temp;
            for(int r=i,c=j;r<n&&c<m;r++,c++){
                temp.push_back(mat[r][c]);
            }
            sort(temp.begin(),temp.end());
            int k=0;
            for(int r=i,c=j;r<n&&c<m;r++,c++){
                ans[r][c]=temp[k];
                k++;
            }
        }
        for(int j=1,i=0;j<m;j++){
            vector<int> temp;
            for(int r=i,c=j;r<n&&c<m;r++,c++){
                temp.push_back(mat[r][c]);
            }
            sort(temp.begin(),temp.end());
            int k=0;
            for(int r=i,c=j;r<n&&c<m;r++,c++){
                ans[r][c]=temp[k];
                k++;
            }
        }
        return ans;
    }
};
